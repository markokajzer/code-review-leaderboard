#!/usr/bin/env ruby

require "active_support"
require "whirly"

require_relative "../lib/config"
require_relative "../lib/spinner"

require_relative "../lib/pulls"
require_relative "../lib/repository"
require_relative "../lib/reviews"

require_relative "../lib/formatter"

Config.initialize!

raise Config::ConfigurationError, "Access token is required" if Config.access_token.nil?
raise Config::ConfigurationError, "Repository is required" if Config.repositories.empty?

puts "Fetching pull requests for #{Config.repositories.join(", ")}..." if Config.repositories.size > 1

pulls = Spinner.start do
  Config.repositories.flat_map.with_index do |name, index|
    Whirly.status = if Config.repositories.one?
      "Fetching pull requests..."
    else
      "Fetching pull requests #{name}... (#{index + 1}/#{Config.repositories.size})"
    end

    Repository.new(name:).pulls
  end
end
puts "Found #{pulls.size} pull requests."

reviews = Spinner.start do
  pulls.flat_map.with_index do |pull, index|
    Whirly.status = "Fetching reviews... (#{index + 1}/#{pulls.size})"

    Reviews.for(pull:)
  end
end
puts "Found #{reviews.size} reviews."
puts

puts Formatter.new(reviews).to_table

#!/usr/bin/env ruby

require "bundler"
Bundler.require(:default)

require "active_support/core_ext/object/blank"

require_relative "../lib/async/wait_all_throttled"

require_relative "../lib/config"
require_relative "../lib/spinner"

require_relative "../lib/organization"
require_relative "../lib/pulls"
require_relative "../lib/repository"
require_relative "../lib/reviews"

require_relative "../lib/formatter"

Config.initialize!

raise Config::ConfigurationError, "Access token is required" if Config.access_token.nil?
raise Config::ConfigurationError, "Repository or owner is required" if Config.repositories.empty? && Config.organization.blank?

repositories = if Config.repositories.present?
  Config.repositories.map { Repository.new(name: _1) }
else
  Spinner.start do
    Spinner.status = "Fetching repos for #{Config.organization}..."
    Organization.new(name: Config.organization).repos
  end
end
puts "Found #{repositories.size} repositories" if Config.organization.present? && Config.log_level == :debug

pulls = Spinner.start do
  Spinner.status = "Fetching pull requests..."

  WaitAllThrottled(repositories) { _1.pulls }
end
puts "Found #{pulls.size} pull requests."

reviews = Spinner.start do
  Spinner.status = "Fetching reviews..."

  WaitAllThrottled(pulls) { Reviews.for(pull: _1) }
end
puts "Found #{reviews.size} reviews."
puts

puts Formatter.new(reviews).to_table
